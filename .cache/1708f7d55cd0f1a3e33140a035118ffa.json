{
  "id": "pages\\guides\\storybook.ts",
  "dependencies": [
    {
      "name": "C:\\Users\\tjshu\\Documents\\GitHub\\skatejs\\tsconfig.json",
      "includedInParent": true,
      "mtime": 1533852749669
    },
    {
      "name":
        "C:\\Users\\tjshu\\Documents\\GitHub\\skatejs\\site\\package.json",
      "includedInParent": true,
      "mtime": 1534115027496
    },
    {
      "name": "C:\\Users\\tjshu\\Documents\\GitHub\\skatejs\\.babelrc",
      "includedInParent": true,
      "mtime": 1533796116874
    },
    {
      "name": "../../components/layout",
      "loc": { "line": 4, "column": 8 },
      "parent":
        "C:\\Users\\tjshu\\Documents\\GitHub\\skatejs\\site\\pages\\guides\\storybook.ts",
      "resolved":
        "C:\\Users\\tjshu\\Documents\\GitHub\\skatejs\\site\\components\\layout.ts"
    },
    {
      "name": "../../components/marked",
      "loc": { "line": 5, "column": 8 },
      "parent":
        "C:\\Users\\tjshu\\Documents\\GitHub\\skatejs\\site\\pages\\guides\\storybook.ts",
      "resolved":
        "C:\\Users\\tjshu\\Documents\\GitHub\\skatejs\\site\\components\\marked.ts"
    },
    {
      "name": "skatejs",
      "loc": { "line": 6, "column": 26 },
      "parent":
        "C:\\Users\\tjshu\\Documents\\GitHub\\skatejs\\site\\pages\\guides\\storybook.ts",
      "resolved":
        "C:\\Users\\tjshu\\Documents\\GitHub\\skatejs\\site\\node_modules\\skatejs\\dist\\esm\\index.js"
    },
    {
      "name": "../../utils",
      "loc": { "line": 7, "column": 24 },
      "parent":
        "C:\\Users\\tjshu\\Documents\\GitHub\\skatejs\\site\\pages\\guides\\storybook.ts",
      "resolved":
        "C:\\Users\\tjshu\\Documents\\GitHub\\skatejs\\site\\utils\\index.ts"
    }
  ],
  "generated": {
    "js":
      "\"use strict\";\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _templateObject = _taggedTemplateLiteral([\"\\n      <x-layout title=\\\"Using Storybook\\\">\\n        <x-marked\\n          src=\\\"\", \"\\\"\\n        ></x-marked>\\n      </x-layout>\\n    \"], [\"\\n      <x-layout title=\\\"Using Storybook\\\">\\n        <x-marked\\n          src=\\\"\", \"\\\"\\n        ></x-marked>\\n      </x-layout>\\n    \"]);\n\nfunction _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _a;\nrequire(\"../../components/layout\");\nrequire(\"../../components/marked\");\nvar skatejs_1 = require(\"skatejs\");\nvar utils_1 = require(\"../../utils\");\nexports.default = skatejs_1.define((_a = function (_utils_1$Component) {\n  _inherits(_a, _utils_1$Component);\n\n  function _a() {\n    _classCallCheck(this, _a);\n\n    return _possibleConstructorReturn(this, (_a.__proto__ || Object.getPrototypeOf(_a)).apply(this, arguments));\n  }\n\n  _createClass(_a, [{\n    key: \"render\",\n    value: function render() {\n      return this.$(_templateObject, \"\\n            If you're building UI components, it's likely you want to have a development environment to test different permutations of your components by actually using them. The React ecosystem came up with a fantastic tool called [Storybook](https://storybook.js.org). If you haven't heard of it, you should check it out. However, if you're here, it's likely you have, but you might be wondering how you can use it with web components.\\n\\n            ### Getting set up\\n\\n            You'll want to install React (or one of the other supported frameworks) first so that the `getstorybook` command works.\\n\\n            ```\\n            npm i react react-dom\\n            ```\\n\\n            Then you can follow their instructions [here](https://storybook.js.org/basics/quick-start-guide/) to set up Storybook.\\n\\n            ### Boilerplate\\n\\n            Once you're all set up, you'll end up with a file called `stories/index.stories.js`. When you open it you'll probably see a bunch of boilerplate. Blow it all away and replace it with this:\\n\\n            ```js\\n            import React from 'react';\\n            import { storiesOf } from '@storybook/react';\\n            ```\\n\\n            ### Initial configuration\\n\\n            Before we start coding in this file, we're going to set up our environment assuming that the browser we're testing in has native support for Custom Elements and Shadow DOM. Since Storybook transpiles everything to ES5 by default, we need to add the [Custom Elements ES5 adapter](https://github.com/webcomponents/webcomponentsjs#custom-elements-es5-adapterjs). To do this, we create a file called [`.storybook/preview-head.html`](https://storybook.js.org/configurations/add-custom-head-tags/) and put the following in it:\\n\\n            ```html\\n            <script src=\\\"https://unpkg.com/@webcomponents/webcomponentsjs@1.0.22/custom-elements-es5-adapter.js\\\"></script>\\n            ```\\n\\n            This ensures that the adapter is loaded in your UI frame before your application code. If you don't do this, you'll get an error that says something like:\\n\\n            > Uncaught TypeError: Failed to construct 'HTMLElement': Please use the 'new' operator, this DOM object constructor cannot be called as a function.\\n\\n            ### Our test component\\n\\n            Now that our environment is all set up, we can start coding a test component that's pretty simple. The goal here is to show how to set up Storybook, not necessarily build a complex component.\\n\\n            Before we start writing our component we need to install a few things:\\n\\n            1. SkateJS - _duh!_\\n            2. [LitHTML](https://github.com/PolymerLabs/lit-html) - we want to show how to use something besides React, inside of a React dev tool.\\n            3. The [SkateJS renderer for LitHTML](/renderers/with-lit-html) - just ties LitHTML into Skate.\\n\\n            ```js\\n            npm i skatejs @skatejs/renderer-lit-html lit-html\\n            ```\\n\\n            Once those are installed, we can start writing out component. For the sake of simplicity, we'll just put this in the story file that was created for us. If you were setting up a dev environment for yourself, you'd probably be putting this in a separate directory and importing it.\\n\\n            ```js\\n            import { define, withComponent } from 'skatejs';\\n            import withLitHtml from '@skatejs/renderer-lit-html';\\n            import { html } from 'lit-html/lib/lit-extended';\\n\\n            const Hello = define(\\n              class extends withComponent(withLitHtml()) {\\n                render() {\\n                  return html`Hello, <strong><slot>World</slot></strong>!`;\\n                }\\n              }\\n            );\\n            ```\\n\\n            If you're not familiar with how renderers work, see the [docs on renderers](/renderers).\\n\\n            ### Writing the stories\\n\\n            Before we write our stories, let's enable a few things in React:\\n\\n            1. Prefer setting properties (React sets attributes).\\n            2. Make custom events work.\\n            3. Make passing the custom element constructor as the JSX element tag name\\n               just work. Using this along with Skate's [`define()`](http://localhost:8080/utils/define) utility makes HMR\\n               work out of the box.\\n\\n            To do this, we can use [`@skatejs/val`](https://github.com/skatejs/val). First install it:\\n\\n            ```\\n            npm i @skatejs/val\\n            ```\\n\\n            And then all you have to do is import it and patch `React.createElement`:\\n\\n            ```js\\n            // @jsx h\\n\\n            import val from '@skatejs/val';\\n\\n            const h = val(React.createElement);\\n            ```\\n\\n            This now makes writing our stories easier:\\n\\n            ```js\\n            storiesOf('Hello', module)\\n              .add('with no name', () => <Hello />)\\n              .add('with a name', () => <Hello>You</Hello>);\\n            ```\\n\\n            ### Summing up\\n\\n            Your story file should now look something like:\\n\\n            ```js\\n            // @jsx h\\n\\n            import React from 'react';\\n            import { storiesOf } from '@storybook/react';\\n\\n            import { define, withComponent } from 'skatejs';\\n            import withLitHtml from '@skatejs/renderer-lit-html';\\n            import { html } from 'lit-html/lib/lit-extended';\\n\\n            import val from '@skatejs/val';\\n\\n            const h = val(React.createElement);\\n\\n            const Hello = define(\\n              class extends withComponent(withLitHtml()) {\\n                render() {\\n                  return html`Hello, <strong><slot>World</slot></strong>!`;\\n                }\\n              }\\n            );\\n\\n            storiesOf('Hello', module)\\n              .add('with no name', () => <Hello />)\\n              .add('with a name', () => <Hello>You</Hello>);\\n            ```\\n\\n            You should now have a fully functional Storybook dev environment that you can use to develop your custom elements.\\n\\n            From here, you'd probably want to pull the component out into its own file and import it into your story. You'd probably also want to pull the patching of `React.createElement` out into it's own module, as well.\\n\\n            ### Using Storybook without Skate (vanilla custom elements)\\n\\n            What's interesting about this is you could remove the Skate parts and everything would still just work because all Skate does is make it easier to write a vanilla custom element. Removing Skate and replacing the test component with a vanilla custom element would look something like this:\\n\\n            ```js\\n            // @jsx h\\n\\n            import React from 'react';\\n            import { storiesOf } from '@storybook/react';\\n\\n            import val from '@skatejs/val';\\n\\n            const h = val(React.createElement);\\n\\n            class Hello extends HTMLElement {\\n              constructor() {\\n                super();\\n                this.attachShadow({ mode: 'open' });\\n              }\\n              connectedCallback() {\\n                this.shadowRoot.innerHTML = `Hello, <strong><slot>World</slot></strong>!`;\\n              }\\n            }\\n\\n            customElements.define('x-hello', Hello);\\n\\n            storiesOf('Hello', module)\\n              .add('with no name', () => <Hello />)\\n              .add('with a name', () => <Hello>You</Hello>);\\n            ```\\n\\n            You lose some possibly important features, such as HMR support because you can only register a custom element with the same name once, and this would try to do it multiple times. However, this goes to show that custom elements are the glue that allows you to share components across frameworks; the DOM is your abstraction layer.\\n          \");\n    }\n  }]);\n\n  return _a;\n}(utils_1.Component), _a.is = 'x-pages-guides-storybook', _a));",
    "map": {
      "mappings": [
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 1, "column": 0 },
          "generated": { "line": 17, "column": 0 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 1, "column": 0 },
          "generated": { "line": 17, "column": 8 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 1, "column": 0 },
          "generated": { "line": 17, "column": 33 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 2, "column": 0 },
          "generated": { "line": 18, "column": 0 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 2, "column": 0 },
          "generated": { "line": 18, "column": 8 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 2, "column": 0 },
          "generated": { "line": 18, "column": 33 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 4, "column": 0 },
          "generated": { "line": 19, "column": 0 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 4, "column": 0 },
          "generated": { "line": 19, "column": 4 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 4, "column": 0 },
          "generated": { "line": 19, "column": 16 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 4, "column": 0 },
          "generated": { "line": 19, "column": 24 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 4, "column": 0 },
          "generated": { "line": 19, "column": 33 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 4, "column": 0 },
          "generated": { "line": 19, "column": 34 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 6, "column": 0 },
          "generated": { "line": 20, "column": 0 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 6, "column": 0 },
          "generated": { "line": 20, "column": 4 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 6, "column": 0 },
          "generated": { "line": 20, "column": 14 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 6, "column": 0 },
          "generated": { "line": 20, "column": 22 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 6, "column": 0 },
          "generated": { "line": 20, "column": 35 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 6, "column": 0 },
          "generated": { "line": 20, "column": 36 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 8, "column": 0 },
          "generated": { "line": 21, "column": 0 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 8, "column": 0 },
          "generated": { "line": 21, "column": 8 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 8, "column": 0 },
          "generated": { "line": 21, "column": 15 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 8, "column": 15 },
          "generated": { "line": 21, "column": 18 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 8, "column": 15 },
          "generated": { "line": 21, "column": 28 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 8, "column": 15 },
          "generated": { "line": 21, "column": 34 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 8, "column": 21 },
          "generated": { "line": 21, "column": 36 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 8, "column": 21 },
          "generated": { "line": 22, "column": 0 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 8, "column": 21 },
          "generated": { "line": 24, "column": 0 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 8, "column": 21 },
          "generated": { "line": 25, "column": 0 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 8, "column": 21 },
          "generated": { "line": 27, "column": 0 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 8, "column": 21 },
          "generated": { "line": 28, "column": 0 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 8, "column": 21 },
          "generated": { "line": 30, "column": 0 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 8, "column": 21 },
          "generated": { "line": 31, "column": 0 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 8, "column": 21 },
          "generated": { "line": 32, "column": 0 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 11, "column": 10 },
          "generated": { "line": 32, "column": 29 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 12, "column": 6 },
          "generated": { "line": 33, "column": 0 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 12, "column": 13 },
          "generated": { "line": 33, "column": 13 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 12, "column": 18 },
          "generated": { "line": 33, "column": 18 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 12, "column": 6 },
          "generated": { "line": 33, "column": 19 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 186, "column": 5 },
          "generated": { "line": 34, "column": 0 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 8, "column": 21 },
          "generated": { "line": 35, "column": 0 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 8, "column": 21 },
          "generated": { "line": 37, "column": 0 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 8, "column": 21 },
          "generated": { "line": 38, "column": 0 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 9, "column": 16 },
          "generated": { "line": 38, "column": 2 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 9, "column": 16 },
          "generated": { "line": 38, "column": 10 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 8, "column": 21 },
          "generated": { "line": 38, "column": 19 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 10, "column": 11 },
          "generated": { "line": 38, "column": 22 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 10, "column": 11 },
          "generated": { "line": 38, "column": 25 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 10, "column": 11 },
          "generated": { "line": 38, "column": 27 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 10, "column": 16 },
          "generated": { "line": 38, "column": 30 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 8, "column": 21 },
          "generated": { "line": 38, "column": 56 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 8, "column": 15 },
          "generated": { "line": 38, "column": 60 }
        },
        {
          "source": "pages\\guides\\storybook.ts",
          "name": null,
          "original": { "line": 8, "column": 0 },
          "generated": { "line": 38, "column": 62 }
        }
      ],
      "sources": {
        "pages\\guides\\storybook.ts":
          "import '../../components/layout';\nimport '../../components/marked';\n\nimport { define } from 'skatejs';\n\nimport { Component } from '../../utils';\n\nexport default define(\n  class extends Component {\n    static is = 'x-pages-guides-storybook';\n    render() {\n      return this.$`\n      <x-layout title=\"Using Storybook\">\n        <x-marked\n          src=\"${`\n            If you're building UI components, it's likely you want to have a development environment to test different permutations of your components by actually using them. The React ecosystem came up with a fantastic tool called [Storybook](https://storybook.js.org). If you haven't heard of it, you should check it out. However, if you're here, it's likely you have, but you might be wondering how you can use it with web components.\n\n            ### Getting set up\n\n            You'll want to install React (or one of the other supported frameworks) first so that the \\`getstorybook\\` command works.\n\n            \\`\\`\\`\n            npm i react react-dom\n            \\`\\`\\`\n\n            Then you can follow their instructions [here](https://storybook.js.org/basics/quick-start-guide/) to set up Storybook.\n\n            ### Boilerplate\n\n            Once you're all set up, you'll end up with a file called \\`stories/index.stories.js\\`. When you open it you'll probably see a bunch of boilerplate. Blow it all away and replace it with this:\n\n            \\`\\`\\`js\n            import React from 'react';\n            import { storiesOf } from '@storybook/react';\n            \\`\\`\\`\n\n            ### Initial configuration\n\n            Before we start coding in this file, we're going to set up our environment assuming that the browser we're testing in has native support for Custom Elements and Shadow DOM. Since Storybook transpiles everything to ES5 by default, we need to add the [Custom Elements ES5 adapter](https://github.com/webcomponents/webcomponentsjs#custom-elements-es5-adapterjs). To do this, we create a file called [\\`.storybook/preview-head.html\\`](https://storybook.js.org/configurations/add-custom-head-tags/) and put the following in it:\n\n            \\`\\`\\`html\n            <script src=\"https://unpkg.com/@webcomponents/webcomponentsjs@1.0.22/custom-elements-es5-adapter.js\"></script>\n            \\`\\`\\`\n\n            This ensures that the adapter is loaded in your UI frame before your application code. If you don't do this, you'll get an error that says something like:\n\n            > Uncaught TypeError: Failed to construct 'HTMLElement': Please use the 'new' operator, this DOM object constructor cannot be called as a function.\n\n            ### Our test component\n\n            Now that our environment is all set up, we can start coding a test component that's pretty simple. The goal here is to show how to set up Storybook, not necessarily build a complex component.\n\n            Before we start writing our component we need to install a few things:\n\n            1. SkateJS - _duh!_\n            2. [LitHTML](https://github.com/PolymerLabs/lit-html) - we want to show how to use something besides React, inside of a React dev tool.\n            3. The [SkateJS renderer for LitHTML](/renderers/with-lit-html) - just ties LitHTML into Skate.\n\n            \\`\\`\\`js\n            npm i skatejs @skatejs/renderer-lit-html lit-html\n            \\`\\`\\`\n\n            Once those are installed, we can start writing out component. For the sake of simplicity, we'll just put this in the story file that was created for us. If you were setting up a dev environment for yourself, you'd probably be putting this in a separate directory and importing it.\n\n            \\`\\`\\`js\n            import { define, withComponent } from 'skatejs';\n            import withLitHtml from '@skatejs/renderer-lit-html';\n            import { html } from 'lit-html/lib/lit-extended';\n\n            const Hello = define(\n              class extends withComponent(withLitHtml()) {\n                render() {\n                  return html\\`Hello, <strong><slot>World</slot></strong>!\\`;\n                }\n              }\n            );\n            \\`\\`\\`\n\n            If you're not familiar with how renderers work, see the [docs on renderers](/renderers).\n\n            ### Writing the stories\n\n            Before we write our stories, let's enable a few things in React:\n\n            1. Prefer setting properties (React sets attributes).\n            2. Make custom events work.\n            3. Make passing the custom element constructor as the JSX element tag name\n               just work. Using this along with Skate's [\\`define()\\`](http://localhost:8080/utils/define) utility makes HMR\n               work out of the box.\n\n            To do this, we can use [\\`@skatejs/val\\`](https://github.com/skatejs/val). First install it:\n\n            \\`\\`\\`\n            npm i @skatejs/val\n            \\`\\`\\`\n\n            And then all you have to do is import it and patch \\`React.createElement\\`:\n\n            \\`\\`\\`js\n            // @jsx h\n\n            import val from '@skatejs/val';\n\n            const h = val(React.createElement);\n            \\`\\`\\`\n\n            This now makes writing our stories easier:\n\n            \\`\\`\\`js\n            storiesOf('Hello', module)\n              .add('with no name', () => <Hello />)\n              .add('with a name', () => <Hello>You</Hello>);\n            \\`\\`\\`\n\n            ### Summing up\n\n            Your story file should now look something like:\n\n            \\`\\`\\`js\n            // @jsx h\n\n            import React from 'react';\n            import { storiesOf } from '@storybook/react';\n\n            import { define, withComponent } from 'skatejs';\n            import withLitHtml from '@skatejs/renderer-lit-html';\n            import { html } from 'lit-html/lib/lit-extended';\n\n            import val from '@skatejs/val';\n\n            const h = val(React.createElement);\n\n            const Hello = define(\n              class extends withComponent(withLitHtml()) {\n                render() {\n                  return html\\`Hello, <strong><slot>World</slot></strong>!\\`;\n                }\n              }\n            );\n\n            storiesOf('Hello', module)\n              .add('with no name', () => <Hello />)\n              .add('with a name', () => <Hello>You</Hello>);\n            \\`\\`\\`\n\n            You should now have a fully functional Storybook dev environment that you can use to develop your custom elements.\n\n            From here, you'd probably want to pull the component out into its own file and import it into your story. You'd probably also want to pull the patching of \\`React.createElement\\` out into it's own module, as well.\n\n            ### Using Storybook without Skate (vanilla custom elements)\n\n            What's interesting about this is you could remove the Skate parts and everything would still just work because all Skate does is make it easier to write a vanilla custom element. Removing Skate and replacing the test component with a vanilla custom element would look something like this:\n\n            \\`\\`\\`js\n            // @jsx h\n\n            import React from 'react';\n            import { storiesOf } from '@storybook/react';\n\n            import val from '@skatejs/val';\n\n            const h = val(React.createElement);\n\n            class Hello extends HTMLElement {\n              constructor() {\n                super();\n                this.attachShadow({ mode: 'open' });\n              }\n              connectedCallback() {\n                this.shadowRoot.innerHTML = \\`Hello, <strong><slot>World</slot></strong>!\\`;\n              }\n            }\n\n            customElements.define('x-hello', Hello);\n\n            storiesOf('Hello', module)\n              .add('with no name', () => <Hello />)\n              .add('with a name', () => <Hello>You</Hello>);\n            \\`\\`\\`\n\n            You lose some possibly important features, such as HMR support because you can only register a custom element with the same name once, and this would try to do it multiple times. However, this goes to show that custom elements are the glue that allows you to share components across frameworks; the DOM is your abstraction layer.\n          `}\"\n        ></x-marked>\n      </x-layout>\n    `;\n    }\n  }\n);\n"
      },
      "lineCount": null
    }
  },
  "hash": "4ab09bc23b75364fc79b9bfb03e102df",
  "cacheData": { "env": {} }
}
