{"version":3,"sources":["webpack:///chunk.17.js","webpack:///./pages/utils/emit.js"],"names":["webpackJsonp","273","module","exports","__webpack_require__","Object","defineProperty","value","_templateObject","strings","raw","freeze","defineProperties","_utils","default","component","this","$"],"mappings":"AAAAA,cAAc,KAERC,IACA,SAAUC,EAAQC,EAASC,GAEjC,YAGAC,QAAOC,eAAeH,EAAS,cAC7BI,OAAO,GAGT,IAAIC,GAQJ,SAAgCC,EAASC,GAAO,MAAOL,QAAOM,OAAON,OAAOO,iBAAiBH,GAAWC,KAAOH,MAAOF,OAAOM,OAAOD,SARtF,yDAA0D,uCAAwC,yDAA0D,sCCV1MN,GAAA,IACAA,EAAA,GAEA,IAAAS,GAAAT,EAAA,GDiBAD,GAAQW,SCfO,EAAAD,EAAAE,WAAU,WACvB,MAAOC,MAAKC,EAAZT,EAAA","file":"chunk.17.js","sourcesContent":["webpackJsonp([17],{\n\n/***/ 273:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _templateObject = _taggedTemplateLiteral(['\\n    <x-layout title=\"emit()\">\\n      <x-marked src=\"', '\"></x-marked>\\n    </x-layout>\\n  '], ['\\n    <x-layout title=\"emit()\">\\n      <x-marked src=\"', '\"></x-marked>\\n    </x-layout>\\n  ']);\n\n__webpack_require__(33);\n\n__webpack_require__(27);\n\nvar _utils = __webpack_require__(24);\n\nfunction _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nexports.default = (0, _utils.component)(function utilsEmit() {\n  return this.$(_templateObject, '\\n        The `emit()` function dispatches an event on the specified element with the most common behaviour one will probably want from a DOM event, while still remaining just as customisable as doing it the longer, built-in way. By default it:\\n\\n        1. Bubbles\\n        2. Is cancelable\\n        3. Does not propagate through shadow boundaries.\\n\\n        It\\'s designed to take a lot of the ceremony out of dispatching events. Also, the `CustomEvent` constructor isn\\'t usable as a constructor in environments where custom elements aren\\'t supported, so you\\'d have to take that into account, too.\\n\\n        The Skate example is short, sweet and to the point:\\n\\n        ```js\\n          import { emit } from \\'skatejs\\';\\n\\n          emit(elem, \\'myevent\\', {\\n            detail: {}\\n          });\\n        ```\\n\\n        _You can leave out `detail` if you don\\'t need it._\\n\\n        Compare this to the following, longer forms.\\n\\n        ### Modern browsers\\n\\n        ```js\\n          elem.dispatchEvent(new CustomEvent(\\'myevent\\', {\\n            bubbles: true,\\n            cancelable: true,\\n            composed: false,\\n            detail: {}\\n          }));\\n        ```\\n\\n        ### Non-native environments\\n\\n        ```js\\n          const e = document.createEvent(\\'CustomEvent\\');\\n          e.initCustomEvent(\\'myevent\\', true, true, {});\\n          Object.defineProperty(e, \\'composed\\', { value: false });\\n          elem.dispatchEvent(e);\\n        ```\\n      ');\n});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// chunk.17.js","// @flow\n\nimport '../../components/layout';\nimport '../../components/marked';\n\nimport { component } from '../../utils';\n\nexport default component(function utilsEmit() {\n  return this.$`\n    <x-layout title=\"emit()\">\n      <x-marked src=\"${`\n        The \\`emit()\\` function dispatches an event on the specified element with the most common behaviour one will probably want from a DOM event, while still remaining just as customisable as doing it the longer, built-in way. By default it:\n\n        1. Bubbles\n        2. Is cancelable\n        3. Does not propagate through shadow boundaries.\n\n        It's designed to take a lot of the ceremony out of dispatching events. Also, the \\`CustomEvent\\` constructor isn't usable as a constructor in environments where custom elements aren't supported, so you'd have to take that into account, too.\n\n        The Skate example is short, sweet and to the point:\n\n        \\`\\`\\`js\n          import { emit } from 'skatejs';\n\n          emit(elem, 'myevent', {\n            detail: {}\n          });\n        \\`\\`\\`\n\n        _You can leave out \\`detail\\` if you don't need it._\n\n        Compare this to the following, longer forms.\n\n        ### Modern browsers\n\n        \\`\\`\\`js\n          elem.dispatchEvent(new CustomEvent('myevent', {\n            bubbles: true,\n            cancelable: true,\n            composed: false,\n            detail: {}\n          }));\n        \\`\\`\\`\n\n        ### Non-native environments\n\n        \\`\\`\\`js\n          const e = document.createEvent('CustomEvent');\n          e.initCustomEvent('myevent', true, true, {});\n          Object.defineProperty(e, 'composed', { value: false });\n          elem.dispatchEvent(e);\n        \\`\\`\\`\n      `}\"></x-marked>\n    </x-layout>\n  `;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./pages/utils/emit.js"],"sourceRoot":""}